{"ast":null,"code":"var _jsxFileName = \"/Users/dcmag/Documents/GitRepos/photoshare/src/pages/auth/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Typography, Box, Link, Stack, TextField, Button } from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport AuthCard from 'components/auth/AuthCard';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const {\n    setToken\n  } = props;\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const navigate = useNavigate();\n  const [formValue, setFormValue] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    setFormValue({ ...formValue,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = () => {\n    if (!formValue.email || !formValue.password) {\n      return enqueueSnackbar(\"Fill out all required fields.\", {\n        variant: \"error\"\n      });\n    }\n\n    axios.post('/token', formValue).then(res => {\n      setToken(res.data.access_token);\n      navigate('/');\n    }).catch(() => {\n      enqueueSnackbar(\"Invalid email or password\", {\n        variant: \"error\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthCard, {\n    title: \"Log In\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            name: \"email\",\n            id: \"email\",\n            label: \"Email\",\n            fullWidth: true,\n            value: formValue.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            name: \"password\",\n            fullWidth: true,\n            value: formValue.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            onClick: e => {\n              e.preventDefault();\n              handleSubmit();\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      mt: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        mr: 1,\n        children: \"No Account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          component: RouterLink,\n          to: \"/auth/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"srRAZDr9k5QANPWz9uNvlNtyEsg=\", false, function () {\n  return [useSnackbar, useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/dcmag/Documents/GitRepos/photoshare/src/pages/auth/Login.tsx"],"names":["useState","Link","RouterLink","useNavigate","Typography","Box","Stack","TextField","Button","useSnackbar","AuthCard","axios","Login","props","setToken","enqueueSnackbar","navigate","formValue","setFormValue","email","password","handleChange","e","target","name","value","handleSubmit","variant","post","then","res","data","access_token","catch","preventDefault"],"mappings":"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","sourcesContent":["import type { ChangeEvent } from 'react';\n\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Typography, Box, Link, Stack, TextField, Button } from '@mui/material';\nimport { useSnackbar } from 'notistack';\n\n\nimport AuthCard from 'components/auth/AuthCard';\nimport axios from 'axios';\n\nconst Login = (props) => {\n  const { setToken } = props;\n\n  const { enqueueSnackbar } = useSnackbar();\n  const navigate = useNavigate();\n\n  const [formValue, setFormValue] = useState({\n    email: '',\n    password: '',\n  })\n\n  const handleChange = (e : ChangeEvent<HTMLInputElement>) => {\n    setFormValue({\n      ...formValue,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  const handleSubmit = () => {\n    if (!formValue.email || !formValue.password) {\n      return enqueueSnackbar(\"Fill out all required fields.\", {\n        variant: \"error\",\n      });\n    }\n\n    axios.post('/token', formValue).then(res => {\n      setToken(res.data.access_token);\n      navigate('/');\n    }).catch(() => {\n      enqueueSnackbar(\"Invalid email or password\", {\n        variant: \"error\",\n      });\n    })\n  }\n\n  return (\n    <AuthCard title=\"Log In\">\n      <Box\n        component=\"form\"\n        noValidate\n        autoComplete=\"off\"\n        display=\"flex\"\n        flexDirection=\"column\"\n      >\n        <form>\n          <Stack spacing={2}>\n            <TextField\n              name=\"email\"\n              id=\"email\"\n              label=\"Email\"\n              fullWidth\n              value={formValue.email}\n              onChange={handleChange}\n              required\n            />\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              fullWidth\n              value={formValue.password}\n              onChange={handleChange}\n              required\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              onClick={(e) => {\n                e.preventDefault();\n                handleSubmit();\n              }}\n            >\n              Register\n            </Button>\n          </Stack>\n        </form>\n      </Box>\n      <Box display=\"flex\" mt={2}>\n        <Typography mr={1}>No Account?</Typography>\n        <Typography>\n          <Link component={RouterLink} to=\"/auth/register\">\n            Register\n          </Link>\n        </Typography>\n      </Box>\n    </AuthCard>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}