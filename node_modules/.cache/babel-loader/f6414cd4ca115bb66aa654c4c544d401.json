{"ast":null,"code":"var _jsxFileName = \"/Users/dcmag/Documents/GitRepos/photoshare/src/components/album/AlbumDeletePhoto.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Typography, Card, CardContent, Stack, Chip, Button, Divider } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport axios from '../../utils/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AlbumDeletePhoto = () => {\n  _s();\n\n  const {\n    album_id\n  } = useParams();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [photos, setPhotos] = useState();\n\n  const fetchPhotos = () => {\n    axios.get(`/albums?album_id=${album_id}`).then(res => {\n      setPhotos(res.data.images);\n      console.log(res.data.images);\n    });\n  };\n\n  const deletePhoto = photo_id => {\n    axios.post(`/albums/photo/delete`, {\n      photo_id\n    }).then(res => {\n      enqueueSnackbar(res.data.message, {\n        variant: res.data.success ? \"success\" : \"error\"\n      });\n      if (res.data.success) window.location.reload();\n    }).catch(() => {\n      enqueueSnackbar(\"Error deleting photo.\", {\n        variant: \"error\"\n      });\n    });\n  };\n\n  useEffect(() => {\n    fetchPhotos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        mb: 2,\n        children: \"Delete Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: photos === null || photos === void 0 ? void 0 : photos.map(photo => {\n          var _photo$tags;\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: photo.data.replace(\"./public\", \"\"),\n              alt: photo.caption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: photo.caption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 2,\n              children: photo === null || photo === void 0 ? void 0 : (_photo$tags = photo.tags) === null || _photo$tags === void 0 ? void 0 : _photo$tags.map(tag => /*#__PURE__*/_jsxDEV(Chip, {\n                label: tag.tag_name\n              }, tag.tag_name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"error\",\n              onClick: () => deletePhoto(photo.photo_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlbumDeletePhoto, \"0B40uKxW/59dsnWVaU1p5L+4Uqg=\", false, function () {\n  return [useParams, useSnackbar];\n});\n\n_c = AlbumDeletePhoto;\nexport default AlbumDeletePhoto;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumDeletePhoto\");","map":{"version":3,"sources":["/Users/dcmag/Documents/GitRepos/photoshare/src/components/album/AlbumDeletePhoto.tsx"],"names":["useEffect","useState","Typography","Card","CardContent","Stack","Chip","Button","Divider","useParams","useSnackbar","axios","AlbumDeletePhoto","album_id","enqueueSnackbar","photos","setPhotos","fetchPhotos","get","then","res","data","images","console","log","deletePhoto","photo_id","post","message","variant","success","window","location","reload","catch","map","photo","replace","caption","tags","tag","tag_name"],"mappings":"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","sourcesContent":["import type { FC } from 'react';\n\nimport { useEffect, useState } from 'react';\nimport {\n  Typography,\n  Card,\n  CardContent,\n  Stack,\n  Chip,\n  Button,\n  Divider,\n} from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport axios from '../../utils/axios';\n\ninterface Photos {\n  data: string;\n  photo_id: number;\n  caption: string;\n  comments: any;\n  num_comments: number;\n  tags: any;\n}\n\nconst AlbumDeletePhoto : FC = () => {\n  const { album_id } = useParams();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [photos, setPhotos] = useState<Photos[]>();\n\n  const fetchPhotos = () => {\n    axios\n      .get(`/albums?album_id=${album_id}`)\n      .then((res) => {\n        setPhotos(res.data.images);\n        console.log(res.data.images);\n      });\n  }\n\n  const deletePhoto = (photo_id) => {\n    axios.post(`/albums/photo/delete`, {\n      photo_id,\n    }).then((res) => {\n      enqueueSnackbar(res.data.message, {\n        variant: res.data.success ? \"success\" : \"error\",\n      })\n\n      if (res.data.success) window.location.reload()\n    }).catch(() => {\n      enqueueSnackbar(\"Error deleting photo.\", {\n        variant: \"error\",\n      });\n    })\n  }\n\n  useEffect(() => {\n    fetchPhotos();\n  }, [])\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h4\" mb={2}>\n          Delete Photo\n        </Typography>\n        <Stack spacing={2}>\n          {photos?.map((photo) => (\n            <>\n              <img\n                src={photo.data.replace(\"./public\", \"\")}\n                alt={photo.caption}\n              />\n              <Typography variant=\"body2\">{photo.caption}</Typography>\n              <Stack direction=\"row\" spacing={2}>\n                {photo?.tags?.map((tag) => (\n                  <Chip key={tag.tag_name} label={tag.tag_name} />\n                ))}\n              </Stack>\n              <Button variant=\"contained\" color=\"error\" onClick={() => deletePhoto(photo.photo_id)}>\n                Delete\n              </Button>\n              <Divider />\n            </>\n          ))}\n        </Stack>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default AlbumDeletePhoto;"]},"metadata":{},"sourceType":"module"}