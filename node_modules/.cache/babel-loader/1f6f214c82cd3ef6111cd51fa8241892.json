{"ast":null,"code":"var _jsxFileName = \"/Users/dcmag/Documents/GitRepos/photoshare/src/contexts/TokenContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenContext = /*#__PURE__*/createContext(undefined);\nexport const TokenProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [token, setToken] = useState(undefined);\n\n  const getToken = () => {\n    const userToken = localStorage.getItem('token');\n    return userToken !== null && userToken !== void 0 ? userToken : undefined;\n  };\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', userToken);\n    setToken(userToken);\n  };\n\n  const removeToken = () => {\n    localStorage.removeItem(\"token\");\n    setToken(undefined);\n  };\n\n  useEffect(() => {\n    setToken(getToken());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: {\n      token,\n      removeToken,\n      setToken: saveToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TokenProvider, \"aGIMdU+dWbKMRwEn/X3wLgTQC5w=\");\n\n_c = TokenProvider;\nexport default TokenContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenProvider\");","map":{"version":3,"sources":["/Users/dcmag/Documents/GitRepos/photoshare/src/contexts/TokenContext.tsx"],"names":["createContext","useState","useEffect","TokenContext","undefined","TokenProvider","children","token","setToken","getToken","userToken","localStorage","getItem","saveToken","setItem","removeToken","removeItem"],"mappings":";;;AACA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;;AAEA,MAAMC,YAAY,gBAAGH,aAAa,CAAMI,SAAN,CAAlC;AAEA,OAAO,MAAMC,aAAkB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAClD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAqBG,SAArB,CAAlC;;AAEA,QAAMK,QAAQ,GAAG,MAAM;AACrB,UAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;AACA,WAAOF,SAAP,aAAOA,SAAP,cAAOA,SAAP,GAAoBN,SAApB;AACD,GAHD;;AAKA,QAAMS,SAAS,GAAIH,SAAD,IAAe;AAC/BC,IAAAA,YAAY,CAACG,OAAb,CAAqB,OAArB,EAA8BJ,SAA9B;AACAF,IAAAA,QAAQ,CAACE,SAAD,CAAR;AACD,GAHD;;AAKA,QAAMK,WAAW,GAAG,MAAM;AACxBJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;AACAR,IAAAA,QAAQ,CAACJ,SAAD,CAAR;AACD,GAHD;;AAKAF,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACC,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEF,MAAAA,KAAF;AAASQ,MAAAA,WAAT;AAAsBP,MAAAA,QAAQ,EAAEK;AAAhC,KAA9B;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BM;;GAAMD,a;;KAAAA,a;AA6Bb,eAAeF,YAAf","sourcesContent":["import type { FC } from 'react';\nimport { createContext, useState, useEffect } from 'react';\n\nconst TokenContext = createContext<any>(undefined);\n\nexport const TokenProvider : FC = ({ children }) => {\n  const [token, setToken] = useState<string | undefined>(undefined);\n\n  const getToken = () => {\n    const userToken = localStorage.getItem('token');\n    return userToken ?? undefined;\n  }\n\n  const saveToken = (userToken) => {\n    localStorage.setItem('token', userToken);\n    setToken(userToken);\n  };\n\n  const removeToken = () => {\n    localStorage.removeItem(\"token\");\n    setToken(undefined);\n  }\n\n  useEffect(() => {\n    setToken(getToken());\n  }, []);\n\n  return (\n    <TokenContext.Provider value={{ token, removeToken, setToken: saveToken }}>\n      {children}\n    </TokenContext.Provider>\n  );\n}\n\nexport default TokenContext;"]},"metadata":{},"sourceType":"module"}