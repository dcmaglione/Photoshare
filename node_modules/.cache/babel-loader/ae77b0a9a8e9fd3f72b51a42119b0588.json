{"ast":null,"code":"var _jsxFileName = \"/Users/dcmag/Documents/GitRepos/photoshare/src/pages/album/AlbumView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Typography, Grid, Card, CardContent, Stack, Chip } from \"@mui/material\";\nimport { useParams } from 'react-router-dom';\nimport axios from '../../utils/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlbumView = () => {\n  _s();\n\n  var _album$images;\n\n  const {\n    album_id\n  } = useParams();\n  const [album, setAlbum] = useState();\n\n  const fetchAlbum = () => {\n    axios.get(`/albums?album_id=${album_id}`).then(res => {\n      setAlbum(res.data);\n      console.log(res.data);\n    });\n  };\n\n  useEffect(() => {\n    fetchAlbum();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: album === null || album === void 0 ? void 0 : album.album_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"By \", album === null || album === void 0 ? void 0 : album.first_name, \" \", album === null || album === void 0 ? void 0 : album.last_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), album === null || album === void 0 ? void 0 : (_album$images = album.images) === null || _album$images === void 0 ? void 0 : _album$images.map(image => {\n      var _image$tags;\n\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.data.replace(\"./public\", \"\"),\n              alt: image.caption,\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: image.caption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 2,\n              mt: 2,\n              children: image === null || image === void 0 ? void 0 : (_image$tags = image.tags) === null || _image$tags === void 0 ? void 0 : _image$tags.map(tag => /*#__PURE__*/_jsxDEV(Chip, {\n                label: tag.tag_name\n              }, tag.tag_name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlbumView, \"XTFdfgVATX68XUtUeT1kiTlgZc0=\", false, function () {\n  return [useParams];\n});\n\n_c = AlbumView;\nexport default AlbumView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumView\");","map":{"version":3,"sources":["/Users/dcmag/Documents/GitRepos/photoshare/src/pages/album/AlbumView.tsx"],"names":["useEffect","useState","Typography","Grid","Card","CardContent","Stack","Chip","useParams","axios","AlbumView","album_id","album","setAlbum","fetchAlbum","get","then","res","data","console","log","album_name","first_name","last_name","images","map","image","replace","caption","tags","tag","tag_name"],"mappings":"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","sourcesContent":["import type { FC } from 'react';\nimport { useEffect, useState } from 'react';\nimport {\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Stack,\n  Chip,\n} from \"@mui/material\";\nimport { useParams } from 'react-router-dom';\nimport axios from '../../utils/axios';\n\ninterface Album {\n  album_id: number;\n  album_name: string;\n  user_id: number;\n  first_name: string;\n  last_name: string;\n  images: any;\n}\n\nconst AlbumView : FC = () => {\n  const { album_id } = useParams();\n\n  const [album, setAlbum] = useState<Album>();\n\n  const fetchAlbum = () => {\n    axios\n      .get(`/albums?album_id=${album_id}`)\n      .then((res) => {\n        setAlbum(res.data);\n        console.log(res.data);\n      });\n  }\n\n  useEffect(() => {\n    fetchAlbum();\n  }, [])\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">{album?.album_name}</Typography>\n        <Typography variant=\"body1\">\n          By {album?.first_name} {album?.last_name}\n        </Typography>\n      </Grid>\n      {album?.images?.map((image) => (\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <img\n                src={image.data.replace(\"./public\", \"\")}\n                alt={image.caption}\n                width=\"100%\"\n              />\n              <Typography variant=\"body1\">{image.caption}</Typography>\n              <Stack direction=\"row\" spacing={2} mt={2}>\n                {image?.tags?.map((tag) => (\n                  <Chip key={tag.tag_name} label={tag.tag_name} />\n                ))}\n              </Stack>\n            </CardContent>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport default AlbumView;"]},"metadata":{},"sourceType":"module"}