{"ast":null,"code":"var _jsxFileName = \"/Users/dcmag/Documents/GitRepos/photoshare/src/pages/Leaderboard.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Stack, Typography, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockLeaders = [{\n  name: \"John Doe\",\n  score: 100\n}, {\n  name: \"Jane Doe\",\n  score: 90\n}, {\n  name: \"Jack Doe\",\n  score: 80\n}];\n\nconst Leaderboard = () => {\n  _s();\n\n  const [leaders, setLeaders] = useState(mockLeaders);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Place\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Contribution Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: leaders.map((leader, index) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: leader.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: leader.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Leaderboard, \"pcDCiUt6c9v2X/ig2VClnxs1dZo=\");\n\n_c = Leaderboard;\nexport default Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/Users/dcmag/Documents/GitRepos/photoshare/src/pages/Leaderboard.tsx"],"names":["useState","Stack","Typography","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Paper","mockLeaders","name","score","Leaderboard","leaders","setLeaders","map","leader","index"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SACEC,KADF,EAEEC,UAFF,EAGEC,cAHF,EAIEC,KAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,SAPF,EAQEC,SARF,EASEC,KATF,QAUO,eAVP;;AAaA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADkB,EAKlB;AACED,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALkB,EASlB;AACED,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATkB,CAApB;;AAeA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAACU,WAAD,CAAtC;AAEA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAE,CAAhB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAED,KAA3B;AAAA,6BACE,QAAC,KAAD;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,SAAD;AAAA,oBACGK,OAAO,CAACE,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC9B,gCACE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAA,0BAAYA,KAAK,GAAG;AAApB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AAAA,0BAAYD,MAAM,CAACN;AAAnB;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,SAAD;AAAA,0BAAYM,MAAM,CAACL;AAAnB;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA,eAAeM,KAAf;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD,WARA;AADH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA9BD;;GAAML,W;;KAAAA,W;AAgCN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\nimport {\n  Stack,\n  Typography,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper\n} from \"@mui/material\";\n\n\nconst mockLeaders = [\n  {\n    name: \"John Doe\",\n    score: 100\n  },\n  {\n    name: \"Jane Doe\",\n    score: 90,\n  },\n  {\n    name: \"Jack Doe\",\n    score: 80,\n  },\n]\n\nconst Leaderboard = () => {\n  const [leaders, setLeaders] = useState(mockLeaders);\n\n  return (\n    <Stack spacing={2}>\n      <Typography variant=\"h4\">Leaderboard</Typography>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Place</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Contribution Score</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {leaders.map((leader, index) => {\n              return (\n                <TableRow key={index}>\n                  <TableCell>{index + 1}</TableCell>\n                  <TableCell>{leader.name}</TableCell>\n                  <TableCell>{leader.score}</TableCell>\n                </TableRow>\n              )\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Stack>\n  );\n}\n\nexport default Leaderboard;"]},"metadata":{},"sourceType":"module"}