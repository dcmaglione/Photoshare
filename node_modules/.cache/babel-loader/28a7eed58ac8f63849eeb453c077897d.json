{"ast":null,"code":"var _jsxFileName = \"/Users/dcmag/Documents/GitRepos/photoshare/src/components/friends/FriendsRecommendations.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Typography, Card, CardContent, List, ListItem, IconButton, ListItemIcon, Avatar, ListItemText } from '@mui/material';\nimport axios from '../../utils/axios';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { useSnackbar } from 'notistack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendsRecommendations = () => {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [recommendations, setRecommendations] = useState();\n\n  const handleAddFriend = userId => {\n    axios.post(`/friends/add`, {\n      friend_id: userId\n    }).then(res => {\n      enqueueSnackbar(res.data.message, {\n        variant: res.data.success ? \"success\" : \"error\"\n      });\n      if (res.data.success) window.location.reload();\n    }).catch(() => {\n      enqueueSnackbar(\"An error occurred\", {\n        variant: \"error\"\n      });\n    });\n  };\n\n  const fetchRecommendations = () => {\n    axios.get('/recommendations/friends').then(res => {\n      setRecommendations(res.data);\n    });\n  };\n\n  useEffect(() => {\n    setTimeout(() => fetchRecommendations(), 500);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Friends Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: recommendations === null || recommendations === void 0 ? void 0 : recommendations.map(result => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              handleAddFriend(result.user_id);\n            },\n            children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: [result.first_name[0], result.last_name[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${result.first_name} ${result.last_name} (${result.email})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, `${result.user_id}-${result.first_name}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FriendsRecommendations, \"EzscRiqN1gv8tV3xX7cxblQxHv4=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = FriendsRecommendations;\nexport default FriendsRecommendations;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendsRecommendations\");","map":{"version":3,"sources":["/Users/dcmag/Documents/GitRepos/photoshare/src/components/friends/FriendsRecommendations.tsx"],"names":["useState","useEffect","Typography","Card","CardContent","List","ListItem","IconButton","ListItemIcon","Avatar","ListItemText","axios","AddCircleIcon","useSnackbar","FriendsRecommendations","enqueueSnackbar","recommendations","setRecommendations","handleAddFriend","userId","post","friend_id","then","res","data","message","variant","success","window","location","reload","catch","fetchRecommendations","get","setTimeout","map","result","user_id","first_name","last_name","email"],"mappings":"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","sourcesContent":["import type { FC } from 'react';\n\nimport { useState, useEffect } from 'react';\nimport {\n  Typography,\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  IconButton,\n  ListItemIcon,\n  Avatar,\n  ListItemText,\n} from '@mui/material';\nimport axios from '../../utils/axios';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { useSnackbar } from 'notistack';\n\ninterface Recommendation {\n  user_id: number;\n  first_name: string;\n  last_name: string;\n  email: string;\n}\n\nconst FriendsRecommendations : FC = () => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [recommendations, setRecommendations] = useState<Recommendation[]>();\n\n  const handleAddFriend = (userId : number) => {\n    axios.post(`/friends/add`, {\n      friend_id: userId,\n    }).then(res => {\n      enqueueSnackbar(res.data.message, {\n        variant: res.data.success ? \"success\" : \"error\",\n      });\n\n      if (res.data.success) window.location.reload()\n    }).catch(() => {\n      enqueueSnackbar(\"An error occurred\", {\n        variant: \"error\",\n      });\n    })\n  }\n\n  const fetchRecommendations = () => {\n    axios.get('/recommendations/friends').then(res => {\n      setRecommendations(res.data);\n    })\n  }\n\n  useEffect(() => {\n    setTimeout(() => fetchRecommendations(), 500);\n  }, [])\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\">Friends Recommendations</Typography>\n        <List>\n          {recommendations?.map((result) => (\n            <ListItem\n              key={`${result.user_id}-${result.first_name}`}\n              secondaryAction={\n                <IconButton\n                  onClick={() => {\n                    handleAddFriend(result.user_id);\n                  }}\n                >\n                  <AddCircleIcon />\n                </IconButton>\n              }\n            >\n              <ListItemIcon>\n                <Avatar>\n                  {result.first_name[0]}{result.last_name[0]}\n                </Avatar>\n              </ListItemIcon>\n              <ListItemText\n                primary={`${result.first_name} ${result.last_name} (${result.email})`}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default FriendsRecommendations;"]},"metadata":{},"sourceType":"module"}