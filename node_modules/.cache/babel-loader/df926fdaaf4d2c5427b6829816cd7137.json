{"ast":null,"code":"var _jsxFileName = \"/Users/dcmag/Documents/GitRepos/photoshare/src/pages/Photo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Typography, Stack, Chip, Grid, Card, CardContent, TextField, Button, Box, Divider } from \"@mui/material\";\nimport { useParams } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport axios from '../utils/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Photo = props => {\n  _s();\n\n  var _photo$tags, _photo$likes, _photo$comments;\n\n  const {\n    photo_id\n  } = useParams();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [photo, setPhoto] = useState();\n  const [formValue, setFormValue] = useState({\n    text: ''\n  });\n\n  const fetchPhoto = () => {\n    axios.get(`/imgs?photo_id=${photo_id}`).then(res => {\n      setPhoto(res.data);\n      console.log(res.data);\n    });\n  };\n\n  const likeImage = () => {\n    axios.post(`/imgs/like`, {\n      photo_id\n    }).then(res => {\n      enqueueSnackbar(res.data.message, {\n        variant: res.data.success ? \"success\" : \"error\"\n      });\n      if (res.data.success) window.location.reload();\n    }).catch(() => {\n      enqueueSnackbar(\"Error liking image.\", {\n        variant: \"error\"\n      });\n    });\n  };\n\n  const handleChange = e => {\n    setFormValue({ ...formValue,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = () => {\n    if (!formValue.text) {\n      return enqueueSnackbar(\"Fill out all required fields.\", {\n        variant: \"error\"\n      });\n    }\n\n    axios.post('imgs/comment', {\n      photo_id,\n      text: formValue.text\n    }).then(res => {\n      enqueueSnackbar(res.data.message, {\n        variant: res.data.success ? \"success\" : \"error\"\n      });\n      if (res.data.success) window.location.reload();\n    }).catch(() => {\n      enqueueSnackbar(\"Error adding comment.\", {\n        variant: \"error\"\n      });\n    });\n  };\n\n  useEffect(() => {\n    fetchPhoto();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: photo === null || photo === void 0 ? void 0 : photo.data.replace(\"./public\", \"\"),\n              alt: photo === null || photo === void 0 ? void 0 : photo.caption,\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              mb: 2,\n              children: photo === null || photo === void 0 ? void 0 : photo.caption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 2,\n              children: photo === null || photo === void 0 ? void 0 : (_photo$tags = photo.tags) === null || _photo$tags === void 0 ? void 0 : _photo$tags.map(tag => /*#__PURE__*/_jsxDEV(Chip, {\n                label: tag.tag_name\n              }, tag.tag_name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              mb: 2,\n              children: \"Likes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Number of likes: \", photo === null || photo === void 0 ? void 0 : photo.num_likes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              my: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => likeImage(),\n                children: \"Like\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              mb: 2,\n              children: \"Liked By: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), photo === null || photo === void 0 ? void 0 : (_photo$likes = photo.likes) === null || _photo$likes === void 0 ? void 0 : _photo$likes.map(like => /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                mb: 2,\n                children: [like.first_name, \" \", like.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)]\n            }, like.user_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            mb: 2,\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              spacing: 2,\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Comment\",\n                name: \"text\",\n                variant: \"outlined\",\n                fullWidth: true,\n                value: formValue.text,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                type: \"submit\",\n                onClick: e => {\n                  e.preventDefault();\n                  handleSubmit();\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 2,\n            children: photo === null || photo === void 0 ? void 0 : (_photo$comments = photo.comments) === null || _photo$comments === void 0 ? void 0 : _photo$comments.map(comment => /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: comment.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                mb: 2,\n                children: [\"By \", comment.first_name, \" \", comment.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), (photo === null || photo === void 0 ? void 0 : photo.comments.length) === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"No comments yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Photo, \"SFI9vRR0FVgzZJIAFji4xoD+qGI=\", false, function () {\n  return [useParams, useSnackbar];\n});\n\n_c = Photo;\nexport default Photo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Photo\");","map":{"version":3,"sources":["/Users/dcmag/Documents/GitRepos/photoshare/src/pages/Photo.tsx"],"names":["useEffect","useState","Typography","Stack","Chip","Grid","Card","CardContent","TextField","Button","Box","Divider","useParams","useSnackbar","axios","Photo","props","photo_id","enqueueSnackbar","photo","setPhoto","formValue","setFormValue","text","fetchPhoto","get","then","res","data","console","log","likeImage","post","message","variant","success","window","location","reload","catch","handleChange","e","target","name","value","handleSubmit","replace","caption","tags","map","tag","tag_name","num_likes","likes","like","first_name","last_name","user_id","preventDefault","comments","comment","length"],"mappings":"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","sourcesContent":["import type { FC, ChangeEvent } from 'react';\nimport { useEffect, useState } from 'react';\nimport {\n  Typography,\n  Stack,\n  Chip,\n  Grid,\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  Box,\n  Divider,\n} from \"@mui/material\";\nimport { useParams } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport axios from '../utils/axios';\n\nconst Photo : FC = (props) => {\n  const { photo_id } = useParams();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [photo, setPhoto] = useState<any>();\n  const [formValue, setFormValue] = useState({\n    text: '',\n  })\n\n  const fetchPhoto = () => {\n    axios.get(`/imgs?photo_id=${photo_id}`).then((res) => {\n      setPhoto(res.data);\n      console.log(res.data);\n    })\n  }\n\n  const likeImage = () => {\n    axios.post(`/imgs/like`, {\n      photo_id,\n    }).then((res) => {\n      enqueueSnackbar(res.data.message, {\n        variant: res.data.success ? \"success\" : \"error\",\n      })\n\n      if (res.data.success) window.location.reload()\n    }).catch(() => {\n      enqueueSnackbar(\"Error liking image.\", {\n        variant: \"error\",\n      });\n    })\n  }\n\n  const handleChange = (e : ChangeEvent<HTMLInputElement>) => {\n    setFormValue({\n      ...formValue,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  const handleSubmit = () => {\n    if (!formValue.text) {\n      return enqueueSnackbar(\"Fill out all required fields.\", {\n        variant: \"error\",\n      });\n    }\n\n    axios.post('imgs/comment', {\n      photo_id,\n      text: formValue.text,\n    }).then((res) => {\n      enqueueSnackbar(res.data.message, {\n        variant: res.data.success ? \"success\" : \"error\",\n      })\n\n      if (res.data.success) window.location.reload()\n    }).catch(() => {\n      enqueueSnackbar(\"Error adding comment.\", {\n        variant: \"error\",\n      });\n    })\n  }\n\n  useEffect(() => {\n    fetchPhoto()\n  }, [])\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} md={6}>\n        <Stack spacing={2}>\n          <Card>\n            <CardContent>\n              <img\n                src={photo?.data.replace(\"./public\", \"\")}\n                alt={photo?.caption}\n                width=\"100%\"\n              />\n              <Typography variant=\"body2\" mb={2}>\n                {photo?.caption}\n              </Typography>\n              <Stack direction=\"row\" spacing={2}>\n                {photo?.tags?.map((tag) => (\n                  <Chip key={tag.tag_name} label={tag.tag_name} />\n                ))}\n              </Stack>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h5\" mb={2}>\n                Likes\n              </Typography>\n              <Typography variant=\"body1\">\n                Number of likes: {photo?.num_likes}\n              </Typography>\n              <Box my={2}>\n                <Button variant=\"contained\" onClick={() => likeImage()}>\n                  Like\n                </Button>\n              </Box>\n              <Typography variant=\"h6\" mb={2}>Liked By: </Typography>\n              {photo?.likes?.map((like) => (\n                <Box key={like.user_id} mb={2}>\n                  <Typography variant=\"body1\" mb={2}>\n                    {like.first_name} {like.last_name}\n                  </Typography>\n                  <Divider />\n                </Box>\n              ))}\n            </CardContent>\n          </Card>\n        </Stack>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h4\" mb={2}>\n              Comments\n            </Typography>\n            <form>\n              <Stack direction=\"row\" spacing={2} mb={2}>\n                <TextField\n                  label=\"Comment\"\n                  name=\"text\"\n                  variant=\"outlined\"\n                  fullWidth\n                  value={formValue.text}\n                  onChange={handleChange}\n                  required\n                />\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    handleSubmit();\n                  }}\n                >\n                  Submit\n                </Button>\n              </Stack>\n            </form>\n            <Stack spacing={2}>\n              {photo?.comments?.map((comment) => (\n                <Box>\n                  <Typography variant=\"body1\">{comment.text}</Typography>\n                  <Typography variant=\"body2\" mb={2}>\n                    By {comment.first_name} {comment.last_name}\n                  </Typography>\n                  <Divider />\n                </Box>\n              ))}\n            </Stack>\n            {photo?.comments.length === 0 && (\n              <Typography variant=\"body1\">No comments yet</Typography>\n            )}\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Photo"]},"metadata":{},"sourceType":"module"}