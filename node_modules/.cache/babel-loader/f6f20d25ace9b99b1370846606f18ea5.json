{"ast":null,"code":"var _jsxFileName = \"/Users/dcmag/Documents/GitRepos/photoshare/src/components/photo/PhotoPreview.tsx\";\nimport { Card, CardContent, Typography, Link, Button, Stack, Chip } from '@mui/material';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhotoPreview = _ref => {\n  var _image$tags;\n\n  let {\n    image,\n    album\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.data.replace(\"./public\", \"\"),\n        alt: image.caption,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        mt: 2,\n        children: image.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"By \", album.first_name, \" \", album.last_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        my: 2,\n        children: image === null || image === void 0 ? void 0 : (_image$tags = image.tags) === null || _image$tags === void 0 ? void 0 : _image$tags.map(tag => /*#__PURE__*/_jsxDEV(Chip, {\n          label: tag.tag_name\n        }, tag.tag_name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        component: RouterLink,\n        to: `/photo/${image.photo_id}`,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PhotoPreview;\nexport default PhotoPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoPreview\");","map":{"version":3,"sources":["/Users/dcmag/Documents/GitRepos/photoshare/src/components/photo/PhotoPreview.tsx"],"names":["Card","CardContent","Typography","Link","Button","Stack","Chip","RouterLink","PhotoPreview","image","album","data","replace","caption","first_name","last_name","tags","map","tag","tag_name","photo_id"],"mappings":";AAAA,SACEA,IADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,KANF,EAOEC,IAPF,QAQO,eARP;AASA,SAASH,IAAI,IAAII,UAAjB,QAAmC,kBAAnC;;;AAEA,MAAMC,YAAY,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AACzC,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE;AACE,QAAA,GAAG,EAAED,KAAK,CAACE,IAAN,CAAWC,OAAX,CAAmB,UAAnB,EAA+B,EAA/B,CADP;AAEE,QAAA,GAAG,EAAEH,KAAK,CAACI,OAFb;AAGE,QAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,EAAE,EAAE,CAAhC;AAAA,kBACGJ,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA,0BACMH,KAAK,CAACI,UADZ,OACyBJ,KAAK,CAACK,SAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAYE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,OAAO,EAAE,CAAhC;AAAmC,QAAA,EAAE,EAAE,CAAvC;AAAA,kBACGN,KADH,aACGA,KADH,sCACGA,KAAK,CAAEO,IADV,gDACG,YAAaC,GAAb,CAAkBC,GAAD,iBAChB,QAAC,IAAD;AAAyB,UAAA,KAAK,EAAEA,GAAG,CAACC;AAApC,WAAWD,GAAG,CAACC,QAAf;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAZF,eAiBE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEZ,UAAjB;AAA6B,QAAA,EAAE,EAAG,UAASE,KAAK,CAACW,QAAS,EAA1D;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA1BD;;KAAMZ,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import {\n  Card,\n  CardContent,\n  Typography,\n  Link,\n  Button,\n  Stack,\n  Chip\n} from '@mui/material';\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst PhotoPreview = ({ image, album }) => {\n  return (\n    <Card>\n      <CardContent>\n        <img\n          src={image.data.replace(\"./public\", \"\")}\n          alt={image.caption}\n          width=\"100%\"\n        />\n        <Typography variant=\"body1\" mt={2}>\n          {image.caption}\n        </Typography>\n        <Typography variant=\"body2\">\n          By {album.first_name} {album.last_name}\n        </Typography>\n        <Stack direction=\"row\" spacing={2} my={2}>\n          {image?.tags?.map((tag) => (\n            <Chip key={tag.tag_name} label={tag.tag_name} />\n          ))}\n        </Stack>\n        <Link component={RouterLink} to={`/photo/${image.photo_id}`}>\n          <Button variant=\"contained\">View</Button>\n        </Link>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PhotoPreview;"]},"metadata":{},"sourceType":"module"}