{"ast":null,"code":"var _jsxFileName = \"/Users/dcmag/Documents/GitRepos/photoshare/src/components/friends/FriendsList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from '../../utils/axios';\nimport { Typography, CardContent, Card, List, ListItem, ListItemIcon, Avatar, ListItemText, IconButton } from \"@mui/material\";\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport { useSnackbar } from 'notistack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendsList = () => {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [friends, setFriends] = useState([]);\n\n  const fetchFriends = () => {\n    axios.get(\"/friends/list\").then(res => {\n      setFriends(res.data);\n    });\n  };\n\n  const handleRemoveFriend = userId => {\n    axios.post(`/friends/remove`, {\n      friend_id: userId\n    }).then(res => {\n      enqueueSnackbar(res.data.message, {\n        variant: \"success\"\n      });\n      window.location.reload();\n    }).catch(err => {\n      enqueueSnackbar(err.response.data.message, {\n        variant: \"error\"\n      });\n    });\n  };\n\n  useEffect(() => {\n    fetchFriends();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        mb: 2,\n        children: \"Friends List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: friends === null || friends === void 0 ? void 0 : friends.map(friend => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              handleRemoveFriend(friend.user_id);\n            },\n            children: /*#__PURE__*/_jsxDEV(RemoveCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: [friend.first_name[0], \" \", friend.last_name[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${friend.first_name} ${friend.last_name} (${friend.email})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, `${friend.user_id}-${friend.first_name}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), friends.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"No friends yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FriendsList, \"GEmw05BWPDthw6Pti55OOOBoGL0=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = FriendsList;\nexport default FriendsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendsList\");","map":{"version":3,"sources":["/Users/dcmag/Documents/GitRepos/photoshare/src/components/friends/FriendsList.tsx"],"names":["useEffect","useState","axios","Typography","CardContent","Card","List","ListItem","ListItemIcon","Avatar","ListItemText","IconButton","RemoveCircleIcon","useSnackbar","FriendsList","enqueueSnackbar","friends","setFriends","fetchFriends","get","then","res","data","handleRemoveFriend","userId","post","friend_id","message","variant","window","location","reload","catch","err","response","map","friend","user_id","first_name","last_name","email","length"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SACEC,UADF,EAEEC,WAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,QALF,EAMEC,YANF,EAOEC,MAPF,EAQEC,YARF,EASEC,UATF,QAUO,eAVP;AAWA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,WAAT,QAA4B,WAA5B;;;AASA,MAAMC,WAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAsBF,WAAW,EAAvC;AAEA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAW,EAAX,CAAtC;;AAEA,QAAMiB,YAAY,GAAG,MAAM;AACzBhB,IAAAA,KAAK,CACJiB,GADD,CACK,eADL,EAECC,IAFD,CAEOC,GAAD,IAAS;AACbJ,MAAAA,UAAU,CAACI,GAAG,CAACC,IAAL,CAAV;AACD,KAJD;AAKD,GAND;;AAQA,QAAMC,kBAAkB,GAAIC,MAAD,IAAY;AACrCtB,IAAAA,KAAK,CAACuB,IAAN,CAAY,iBAAZ,EAA8B;AAC5BC,MAAAA,SAAS,EAAEF;AADiB,KAA9B,EAEGJ,IAFH,CAEQC,GAAG,IAAI;AACbN,MAAAA,eAAe,CAACM,GAAG,CAACC,IAAJ,CAASK,OAAV,EAAmB;AAChCC,QAAAA,OAAO,EAAE;AADuB,OAAnB,CAAf;AAIAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KARD,EAQGC,KARH,CAQSC,GAAG,IAAI;AACdlB,MAAAA,eAAe,CAACkB,GAAG,CAACC,QAAJ,CAAaZ,IAAb,CAAkBK,OAAnB,EAA4B;AACzCC,QAAAA,OAAO,EAAE;AADgC,OAA5B,CAAf;AAGD,KAZD;AAaD,GAdD;;AAgBA5B,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAA,kBACGF,OADH,aACGA,OADH,uBACGA,OAAO,CAAEmB,GAAT,CAAcC,MAAD,iBACZ,QAAC,QAAD;AAEE,UAAA,eAAe,eACb,QAAC,UAAD;AACE,YAAA,OAAO,EAAE,MAAM;AACbb,cAAAA,kBAAkB,CAACa,MAAM,CAACC,OAAR,CAAlB;AACD,aAHH;AAAA,mCAKE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,kCAYE,QAAC,YAAD;AAAA,mCACE,QAAC,MAAD;AAAA,yBACGD,MAAM,CAACE,UAAP,CAAkB,CAAlB,CADH,OAC0BF,MAAM,CAACG,SAAP,CAAiB,CAAjB,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF,eAiBE,QAAC,YAAD;AACE,YAAA,OAAO,EAAG,GAAEH,MAAM,CAACE,UAAW,IAAGF,MAAM,CAACG,SAAU,KAAIH,MAAM,CAACI,KAAM;AADrE;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA,WACQ,GAAEJ,MAAM,CAACC,OAAQ,IAAGD,MAAM,CAACE,UAAW,EAD9C;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAJF,EA6BGtB,OAAO,CAACyB,MAAR,KAAmB,CAAnB,iBACC,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAtED;;GAAM3B,W;UACwBD,W;;;KADxBC,W;AAwEN,eAAeA,WAAf","sourcesContent":["import type { FC } from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from '../../utils/axios';\nimport {\n  Typography,\n  CardContent,\n  Card,\n  List,\n  ListItem,\n  ListItemIcon,\n  Avatar,\n  ListItemText,\n  IconButton,\n} from \"@mui/material\";\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport { useSnackbar } from 'notistack';\n\ninterface Friend {\n  user_id: number;\n  first_name: string;\n  last_name: string;\n  email: string;\n}\n\nconst FriendsList : FC = () => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [friends, setFriends] = useState<Friend[]>([]);\n\n  const fetchFriends = () => {\n    axios\n    .get(\"/friends/list\")\n    .then((res) => {\n      setFriends(res.data);\n    });\n  }\n\n  const handleRemoveFriend = (userId) => {\n    axios.post(`/friends/remove`, {\n      friend_id: userId,\n    }).then(res => {\n      enqueueSnackbar(res.data.message, {\n        variant: \"success\",\n      })\n\n      window.location.reload()\n    }).catch(err => {\n      enqueueSnackbar(err.response.data.message, {\n        variant: \"error\",\n      })\n    })\n  }\n\n  useEffect(() => {\n    fetchFriends()\n  }, [])\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" mb={2}>\n          Friends List\n        </Typography>\n        <List>\n          {friends?.map((friend) => (\n            <ListItem\n              key={`${friend.user_id}-${friend.first_name}`}\n              secondaryAction={\n                <IconButton\n                  onClick={() => {\n                    handleRemoveFriend(friend.user_id);\n                  }}\n                >\n                  <RemoveCircleIcon />\n                </IconButton>\n              }\n            >\n              <ListItemIcon>\n                <Avatar>\n                  {friend.first_name[0]} {friend.last_name[0]}\n                </Avatar>\n              </ListItemIcon>\n              <ListItemText\n                primary={`${friend.first_name} ${friend.last_name} (${friend.email})`}\n              />\n            </ListItem>\n          ))}\n        </List>\n        {friends.length === 0 && (\n          <Typography variant=\"body1\">No friends yet.</Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default FriendsList;"]},"metadata":{},"sourceType":"module"}