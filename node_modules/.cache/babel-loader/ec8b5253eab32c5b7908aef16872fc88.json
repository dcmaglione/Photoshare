{"ast":null,"code":"var _jsxFileName = \"/Users/dcmag/Documents/GitRepos/photoshare/src/pages/auth/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Typography, Box, Link, TextField, Stack, Button } from '@mui/material';\nimport DatePicker from '@mui/lab/DatePicker';\nimport axios from '../../utils/axios';\nimport { useSnackbar } from 'notistack';\nimport AuthCard from 'components/auth/AuthCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [formValue, setFormValue] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    dob: null,\n    hometown: '',\n    gender: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const handleChange = e => {\n    setFormValue({ ...formValue,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = () => {\n    var _formValue$dob;\n\n    if (!formValue.firstName || !formValue.lastName || !formValue.email || !formValue.dob || !formValue.password || !formValue.confirmPassword) {\n      return enqueueSnackbar(\"Fill out all required fields.\", {\n        variant: \"error\"\n      });\n    }\n\n    if (formValue.password !== formValue.confirmPassword) {\n      return enqueueSnackbar(\"Passwords do not match\", {\n        variant: \"error\"\n      });\n    }\n\n    axios.post('/register', {\n      firstName: formValue.firstName,\n      lastName: formValue.lastName,\n      email: formValue.email,\n      dob: (_formValue$dob = formValue.dob) === null || _formValue$dob === void 0 ? void 0 : _formValue$dob.toISOString().slice(0, 19).replace('T', ' '),\n      hometown: formValue.hometown,\n      gender: formValue.gender,\n      password: formValue.password\n    }).then(res => {\n      enqueueSnackbar(res.data.message, {\n        variant: res.data.success ? 'success' : 'error'\n      });\n\n      if (res.data.success) {\n        navigate('/auth/login');\n      }\n    }).catch(() => {\n      enqueueSnackbar(\"Registration failed. Try again.\", {\n        variant: \"error\"\n      });\n    });\n  };\n\n  useEffect(() => {\n    var _formValue$dob2;\n\n    console.log((_formValue$dob2 = formValue.dob) === null || _formValue$dob2 === void 0 ? void 0 : _formValue$dob2.toISOString().slice(0, 19).replace('T', ' '));\n  }, [formValue]);\n  return /*#__PURE__*/_jsxDEV(AuthCard, {\n    title: \"Register\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"firstName\",\n            label: \"First Name\",\n            name: \"firstName\",\n            fullWidth: true,\n            required: true,\n            value: formValue.firstName,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"lastName\",\n            label: \"Last Name\",\n            name: \"lastName\",\n            fullWidth: true,\n            required: true,\n            value: formValue.lastName,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            label: \"Email\",\n            name: \"email\",\n            fullWidth: true,\n            required: true,\n            value: formValue.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            label: \"Date of Birth\",\n            inputFormat: \"MM/dd/yyyy\",\n            value: formValue.dob,\n            onChange: newValue => {\n              setFormValue({ ...formValue,\n                dob: newValue\n              });\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"hometown\",\n            label: \"Hometown\",\n            name: \"hometown\",\n            fullWidth: true,\n            value: formValue.hometown,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"gender\",\n            label: \"Gender\",\n            name: \"gender\",\n            fullWidth: true,\n            value: formValue.gender,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            name: \"password\",\n            fullWidth: true,\n            required: true,\n            value: formValue.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"confirmPassword\",\n            label: \"Confirm Password\",\n            type: \"password\",\n            name: \"confirmPassword\",\n            fullWidth: true,\n            required: true,\n            value: formValue.confirmPassword,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            onClick: e => {\n              e.preventDefault();\n              handleSubmit();\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      mt: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        mr: 1,\n        children: \"Have an Account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          component: RouterLink,\n          to: \"/auth/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"hUWAlWFyVmhwriHZm70+81afQpE=\", false, function () {\n  return [useNavigate, useSnackbar];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/dcmag/Documents/GitRepos/photoshare/src/pages/auth/Register.tsx"],"names":["useState","useEffect","Link","RouterLink","useNavigate","Typography","Box","TextField","Stack","Button","DatePicker","axios","useSnackbar","AuthCard","Register","navigate","enqueueSnackbar","formValue","setFormValue","firstName","lastName","email","dob","hometown","gender","password","confirmPassword","handleChange","e","target","name","value","handleSubmit","variant","post","toISOString","slice","replace","then","res","data","message","success","catch","console","log","newValue","params","preventDefault"],"mappings":"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","sourcesContent":["import type { ChangeEvent } from 'react';\n\nimport { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Typography, Box, Link, TextField, Stack, Button } from '@mui/material';\nimport DatePicker from '@mui/lab/DatePicker';\nimport axios from '../../utils/axios';\nimport { useSnackbar } from 'notistack';\n\nimport AuthCard from 'components/auth/AuthCard';\n\ninterface InterfaceFormValue {\n  firstName: string;\n  lastName: string;\n  email: string;\n  dob: Date | null;\n  hometown: string;\n  gender: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [formValue, setFormValue] = useState<InterfaceFormValue>({\n    firstName: '',\n    lastName: '',\n    email: '',\n    dob: null,\n    hometown: '',\n    gender: '',\n    password: '',\n    confirmPassword: '',\n  })\n\n  const handleChange = (e : ChangeEvent<HTMLInputElement>) => {\n    setFormValue({\n      ...formValue,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  const handleSubmit = () => {\n    if (\n      !formValue.firstName ||\n      !formValue.lastName ||\n      !formValue.email ||\n      !formValue.dob ||\n      !formValue.password ||\n      !formValue.confirmPassword\n    ) {\n      return enqueueSnackbar(\"Fill out all required fields.\", {\n        variant: \"error\",\n      });\n    }\n\n    if (formValue.password !== formValue.confirmPassword) {\n      return enqueueSnackbar(\"Passwords do not match\", {\n        variant: \"error\",\n      });\n    }\n\n    axios.post('/register', {\n      firstName: formValue.firstName,\n      lastName: formValue.lastName,\n      email: formValue.email,\n      dob: formValue.dob?.toISOString().slice(0, 19).replace('T', ' '),\n      hometown: formValue.hometown,\n      gender: formValue.gender,\n      password: formValue.password,\n    }).then(res => {\n      enqueueSnackbar(res.data.message, {\n        variant: res.data.success ? 'success' : 'error'\n      })\n\n      if (res.data.success) {\n        navigate('/auth/login');\n      }\n    }).catch(() => {\n      enqueueSnackbar(\"Registration failed. Try again.\", {\n        variant: \"error\",\n      });\n    })\n  }\n\n  useEffect(() => {\n    console.log(formValue.dob?.toISOString().slice(0, 19).replace('T', ' '));\n  }, [formValue])\n\n  return (\n    <AuthCard title=\"Register\">\n      <Box\n        component=\"form\"\n        noValidate\n        autoComplete=\"off\"\n        display=\"flex\"\n        flexDirection=\"column\"\n      >\n        <form>\n          <Stack spacing={2}>\n            <TextField\n              id=\"firstName\"\n              label=\"First Name\"\n              name=\"firstName\"\n              fullWidth\n              required\n              value={formValue.firstName}\n              onChange={handleChange}\n            />\n            <TextField\n              id=\"lastName\"\n              label=\"Last Name\"\n              name=\"lastName\"\n              fullWidth\n              required\n              value={formValue.lastName}\n              onChange={handleChange}\n            />\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              fullWidth\n              required\n              value={formValue.email}\n              onChange={handleChange}\n            />\n            <DatePicker\n              label=\"Date of Birth\"\n              inputFormat=\"MM/dd/yyyy\"\n              value={formValue.dob}\n              onChange={(newValue) => {\n                setFormValue({\n                  ...formValue,\n                  dob: newValue,\n                });\n              }}\n              renderInput={(params) => <TextField {...params} fullWidth required/>}\n            />\n            <TextField\n              id=\"hometown\"\n              label=\"Hometown\"\n              name=\"hometown\"\n              fullWidth\n              value={formValue.hometown}\n              onChange={handleChange}\n            />\n            <TextField\n              id=\"gender\"\n              label=\"Gender\"\n              name=\"gender\"\n              fullWidth\n              value={formValue.gender}\n              onChange={handleChange}\n            />\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              fullWidth\n              required\n              value={formValue.password}\n              onChange={handleChange}\n            />\n            <TextField\n              id=\"confirmPassword\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              name=\"confirmPassword\"\n              fullWidth\n              required\n              value={formValue.confirmPassword}\n              onChange={handleChange}\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              onClick={(e) => {\n                e.preventDefault();\n                handleSubmit();\n              }}\n            >\n              Register\n            </Button>\n          </Stack>\n        </form>\n      </Box>\n      <Box display=\"flex\" mt={2}>\n        <Typography mr={1}>Have an Account?</Typography>\n        <Typography>\n          <Link component={RouterLink} to=\"/auth/login\">\n            Login\n          </Link>\n        </Typography>\n      </Box>\n    </AuthCard>\n  );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}