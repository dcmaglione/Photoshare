{"ast":null,"code":"var _jsxFileName = \"/Users/dcmag/Documents/GitRepos/photoshare/src/components/friends/SearchAddFriend.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Card, CardContent, Typography, Box, TextField, Button, List, ListItem, ListItemIcon, Avatar, ListItemText, IconButton } from \"@mui/material\";\nimport { useSnackbar } from 'notistack';\nimport axios from '../../utils/axios';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchAddFriend = () => {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [formValue, setFormValue] = useState({\n    firstName: '',\n    lastName: ''\n  });\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleChange = e => {\n    setFormValue({ ...formValue,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = () => {\n    if (!formValue.firstName || !formValue.lastName) {\n      return enqueueSnackbar(\"Fill out all required fields to search.\", {\n        variant: \"error\"\n      });\n    }\n\n    axios.get(`/friends/search?firstName=${formValue.firstName}&lastName=${formValue.lastName}`).then(res => {\n      setSearchResults(res.data);\n    });\n  };\n\n  const handleAddFriend = userId => {\n    axios.post(`/friends/add`, {\n      friend_id: userId\n    }).then(res => {\n      enqueueSnackbar(res.data.message, {\n        variant: res.data.success ? \"success\" : \"error\"\n      });\n      if (res.data.success) window.location.reload();\n    }).catch(() => {\n      enqueueSnackbar(\"An error occurred\", {\n        variant: \"error\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        mb: 2,\n        children: \"Search and Add Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"First Name\",\n          variant: \"outlined\",\n          name: \"firstName\",\n          value: formValue.firstName,\n          onChange: handleChange,\n          required: true,\n          sx: {\n            mr: 2,\n            flex: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Last Name\",\n          variant: \"outlined\",\n          name: \"lastName\",\n          value: formValue.lastName,\n          onChange: handleChange,\n          required: true,\n          sx: {\n            mr: 2,\n            flex: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSubmit,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: searchResults === null || searchResults === void 0 ? void 0 : searchResults.map(result => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              handleAddFriend(result.user_id);\n            },\n            children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: [result.first_name[0], \" \", result.last_name[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${result.first_name} ${result.last_name} (${result.email})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, `${result.user_id}-${result.first_name}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"No results. Try entering a new search term.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchAddFriend, \"aaYtSssmJwmD8/bfE+AbQI7nWLc=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = SearchAddFriend;\nexport default SearchAddFriend;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchAddFriend\");","map":{"version":3,"sources":["/Users/dcmag/Documents/GitRepos/photoshare/src/components/friends/SearchAddFriend.tsx"],"names":["useState","Card","CardContent","Typography","Box","TextField","Button","List","ListItem","ListItemIcon","Avatar","ListItemText","IconButton","useSnackbar","axios","AddCircleIcon","SearchAddFriend","enqueueSnackbar","formValue","setFormValue","firstName","lastName","searchResults","setSearchResults","handleChange","e","target","name","value","handleSubmit","variant","get","then","res","data","handleAddFriend","userId","post","friend_id","message","success","window","location","reload","catch","mr","flex","map","result","user_id","first_name","last_name","email","length"],"mappings":";;;AAEA,SAASA,QAAT,QAAyB,OAAzB;AACA,SACEC,IADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,GAJF,EAKEC,SALF,EAMEC,MANF,EAOEC,IAPF,EAQEC,QARF,EASEC,YATF,EAUEC,MAVF,EAWEC,YAXF,EAYEC,UAZF,QAaO,eAbP;AAcA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;AASA,MAAMC,eAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAsBJ,WAAW,EAAvC;AAEA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC;AACzCoB,IAAAA,SAAS,EAAE,EAD8B;AAEzCC,IAAAA,QAAQ,EAAE;AAF+B,GAAD,CAA1C;AAKA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAkB,EAAlB,CAAlD;;AAEA,QAAMwB,YAAY,GAAIC,CAAD,IAAuC;AAC1DN,IAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEX,OAACO,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFf,KAAD,CAAZ;AAID,GALD;;AAOA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAI,CAACX,SAAS,CAACE,SAAX,IAAwB,CAACF,SAAS,CAACG,QAAvC,EAAiD;AAC/C,aAAOJ,eAAe,CAAC,yCAAD,EAA4C;AAChEa,QAAAA,OAAO,EAAE;AADuD,OAA5C,CAAtB;AAGD;;AAEDhB,IAAAA,KAAK,CAACiB,GAAN,CAAW,6BAA4Bb,SAAS,CAACE,SAAU,aAAYF,SAAS,CAACG,QAAS,EAA1F,EAA6FW,IAA7F,CAAkGC,GAAG,IAAI;AACvGV,MAAAA,gBAAgB,CAACU,GAAG,CAACC,IAAL,CAAhB;AACD,KAFD;AAGD,GAVD;;AAYA,QAAMC,eAAe,GAAIC,MAAD,IAAqB;AAC3CtB,IAAAA,KAAK,CAACuB,IAAN,CAAY,cAAZ,EAA2B;AACzBC,MAAAA,SAAS,EAAEF;AADc,KAA3B,EAEGJ,IAFH,CAEQC,GAAG,IAAI;AACbhB,MAAAA,eAAe,CAACgB,GAAG,CAACC,IAAJ,CAASK,OAAV,EAAmB;AAChCT,QAAAA,OAAO,EAAEG,GAAG,CAACC,IAAJ,CAASM,OAAT,GAAmB,SAAnB,GAA+B;AADR,OAAnB,CAAf;AAIA,UAAIP,GAAG,CAACC,IAAJ,CAASM,OAAb,EAAsBC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACvB,KARD,EAQGC,KARH,CAQS,MAAM;AACb3B,MAAAA,eAAe,CAAC,mBAAD,EAAsB;AACnCa,QAAAA,OAAO,EAAE;AAD0B,OAAtB,CAAf;AAGD,KAZD;AAaD,GAdD;;AAgBA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,MAAb;AAAoB,QAAA,EAAE,EAAE,CAAxB;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,KAAK,EAAC,YADR;AAEE,UAAA,OAAO,EAAC,UAFV;AAGE,UAAA,IAAI,EAAC,WAHP;AAIE,UAAA,KAAK,EAAEZ,SAAS,CAACE,SAJnB;AAKE,UAAA,QAAQ,EAAEI,YALZ;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,EAAE,EAAE;AACFqB,YAAAA,EAAE,EAAE,CADF;AAEFC,YAAAA,IAAI,EAAE;AAFJ;AAPN;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,SAAD;AACE,UAAA,KAAK,EAAC,WADR;AAEE,UAAA,OAAO,EAAC,UAFV;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,KAAK,EAAE5B,SAAS,CAACG,QAJnB;AAKE,UAAA,QAAQ,EAAEG,YALZ;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,EAAE,EAAE;AACFqB,YAAAA,EAAE,EAAE,CADF;AAEFC,YAAAA,IAAI,EAAE;AAFJ;AAPN;AAAA;AAAA;AAAA;AAAA,gBAbF,eAyBE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEjB,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAiCE,QAAC,IAAD;AAAA,kBACGP,aADH,aACGA,aADH,uBACGA,aAAa,CAAEyB,GAAf,CAAoBC,MAAD,iBAClB,QAAC,QAAD;AAEE,UAAA,eAAe,eACb,QAAC,UAAD;AACE,YAAA,OAAO,EAAE,MAAM;AACbb,cAAAA,eAAe,CAACa,MAAM,CAACC,OAAR,CAAf;AACD,aAHH;AAAA,mCAKE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,kCAYE,QAAC,YAAD;AAAA,mCACE,QAAC,MAAD;AAAA,yBACGD,MAAM,CAACE,UAAP,CAAkB,CAAlB,CADH,OAC0BF,MAAM,CAACG,SAAP,CAAiB,CAAjB,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF,eAiBE,QAAC,YAAD;AACE,YAAA,OAAO,EAAG,GAAEH,MAAM,CAACE,UAAW,IAAGF,MAAM,CAACG,SAAU,KAAIH,MAAM,CAACI,KAAM;AADrE;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA,WACQ,GAAEJ,MAAM,CAACC,OAAQ,IAAGD,MAAM,CAACE,UAAW,EAD9C;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAjCF,EA0DG5B,aAAa,CAAC+B,MAAd,KAAyB,CAAzB,iBACC,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoED,CAjHD;;GAAMrC,e;UACwBH,W;;;KADxBG,e;AAmHN,eAAeA,eAAf","sourcesContent":["import type { FC, ChangeEvent } from 'react';\n\nimport { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Box,\n  TextField,\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  Avatar,\n  ListItemText,\n  IconButton,\n} from \"@mui/material\";\nimport { useSnackbar } from 'notistack';\nimport axios from '../../utils/axios';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\n\ninterface SearchResults {\n  user_id: number;\n  first_name: string;\n  last_name: string;\n  email: string;\n}\n\nconst SearchAddFriend : FC = () => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [formValue, setFormValue] = useState({\n    firstName: '',\n    lastName: '',\n  })\n\n  const [searchResults, setSearchResults] = useState<SearchResults[]>([]);\n\n  const handleChange = (e : ChangeEvent<HTMLInputElement>) => {\n    setFormValue({\n      ...formValue,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  const handleSubmit = () => {\n    if (!formValue.firstName || !formValue.lastName) {\n      return enqueueSnackbar(\"Fill out all required fields to search.\", {\n        variant: \"error\",\n      });\n    }\n\n    axios.get(`/friends/search?firstName=${formValue.firstName}&lastName=${formValue.lastName}`).then(res => {\n      setSearchResults(res.data);\n    })\n  }\n\n  const handleAddFriend = (userId : number) => {\n    axios.post(`/friends/add`, {\n      friend_id: userId,\n    }).then(res => {\n      enqueueSnackbar(res.data.message, {\n        variant: res.data.success ? \"success\" : \"error\",\n      });\n\n      if (res.data.success) window.location.reload()\n    }).catch(() => {\n      enqueueSnackbar(\"An error occurred\", {\n        variant: \"error\",\n      });\n    })\n  }\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" mb={2}>\n          Search and Add Friends\n        </Typography>\n        <Box display=\"flex\" mb={2}>\n          <TextField\n            label=\"First Name\"\n            variant=\"outlined\"\n            name=\"firstName\"\n            value={formValue.firstName}\n            onChange={handleChange}\n            required\n            sx={{\n              mr: 2,\n              flex: 1,\n            }}\n          />\n          <TextField\n            label=\"Last Name\"\n            variant=\"outlined\"\n            name=\"lastName\"\n            value={formValue.lastName}\n            onChange={handleChange}\n            required\n            sx={{\n              mr: 2,\n              flex: 1,\n            }}\n          />\n          <Button variant=\"contained\" onClick={handleSubmit}>\n            Search\n          </Button>\n        </Box>\n        <List>\n          {searchResults?.map((result) => (\n            <ListItem\n              key={`${result.user_id}-${result.first_name}`}\n              secondaryAction={\n                <IconButton\n                  onClick={() => {\n                    handleAddFriend(result.user_id);\n                  }}\n                >\n                  <AddCircleIcon />\n                </IconButton>\n              }\n            >\n              <ListItemIcon>\n                <Avatar>\n                  {result.first_name[0]} {result.last_name[0]}\n                </Avatar>\n              </ListItemIcon>\n              <ListItemText\n                primary={`${result.first_name} ${result.last_name} (${result.email})`}\n              />\n            </ListItem>\n          ))}\n        </List>\n        {searchResults.length === 0 && (\n          <Typography variant=\"body1\">\n            No results. Try entering a new search term.\n          </Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default SearchAddFriend;"]},"metadata":{},"sourceType":"module"}