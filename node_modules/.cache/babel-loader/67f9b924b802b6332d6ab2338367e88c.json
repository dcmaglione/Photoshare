{"ast":null,"code":"var _jsxFileName = \"/Users/dcmag/Documents/GitRepos/photoshare/src/pages/album/AlbumView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Typography, Grid } from \"@mui/material\";\nimport { useParams } from 'react-router-dom';\nimport PhotoPreview from 'components/photo/PhotoPreview';\nimport axios from '../../utils/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlbumView = () => {\n  _s();\n\n  var _album$images;\n\n  const {\n    album_id\n  } = useParams();\n  const [album, setAlbum] = useState();\n\n  const fetchAlbum = () => {\n    axios.get(`/albums?album_id=${album_id}`).then(res => {\n      setAlbum(res.data);\n      console.log(res.data);\n    });\n  };\n\n  useEffect(() => {\n    fetchAlbum();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: album === null || album === void 0 ? void 0 : album.album_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"By \", album === null || album === void 0 ? void 0 : album.first_name, \" \", album === null || album === void 0 ? void 0 : album.last_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), album === null || album === void 0 ? void 0 : (_album$images = album.images) === null || _album$images === void 0 ? void 0 : _album$images.map(image => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(PhotoPreview, {\n        image: image,\n        album: album\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: (album === null || album === void 0 ? void 0 : album.images.length) === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"No images in this album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AlbumView, \"XTFdfgVATX68XUtUeT1kiTlgZc0=\", false, function () {\n  return [useParams];\n});\n\n_c = AlbumView;\nexport default AlbumView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumView\");","map":{"version":3,"sources":["/Users/dcmag/Documents/GitRepos/photoshare/src/pages/album/AlbumView.tsx"],"names":["useEffect","useState","Typography","Grid","useParams","PhotoPreview","axios","AlbumView","album_id","album","setAlbum","fetchAlbum","get","then","res","data","console","log","album_name","first_name","last_name","images","map","image","length"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SACEC,UADF,EAEEC,IAFF,QAGO,eAHP;AAIA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAWA,MAAMC,SAAc,GAAG,MAAM;AAAA;;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,SAAS,EAA9B;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;;AAEA,QAAMU,UAAU,GAAG,MAAM;AACvBL,IAAAA,KAAK,CACFM,GADH,CACQ,oBAAmBJ,QAAS,EADpC,EAEGK,IAFH,CAESC,GAAD,IAAS;AACbJ,MAAAA,QAAQ,CAACI,GAAG,CAACC,IAAL,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACD,KALH;AAMD,GAPD;;AASAf,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,kBAA0BF,KAA1B,aAA0BA,KAA1B,uBAA0BA,KAAK,CAAES;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA,0BACMT,KADN,aACMA,KADN,uBACMA,KAAK,CAAEU,UADb,OAC0BV,KAD1B,aAC0BA,KAD1B,uBAC0BA,KAAK,CAAEW,SADjC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGX,KAPH,aAOGA,KAPH,wCAOGA,KAAK,CAAEY,MAPV,kDAOG,cAAeC,GAAf,CAAoBC,KAAD,iBAClB,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEA,KAArB;AAA4B,QAAA,KAAK,EAAEd;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,CAPH,eAYE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,gBACG,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEY,MAAP,CAAcG,MAAd,MAAyB,CAAzB,iBACC,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAtCD;;GAAMjB,S;UACiBH,S;;;KADjBG,S;AAwCN,eAAeA,SAAf","sourcesContent":["import type { FC } from 'react';\nimport { useEffect, useState } from 'react';\nimport {\n  Typography,\n  Grid,\n} from \"@mui/material\";\nimport { useParams } from 'react-router-dom';\n\nimport PhotoPreview from 'components/photo/PhotoPreview';\nimport axios from '../../utils/axios';\n\ninterface Album {\n  album_id: number;\n  album_name: string;\n  user_id: number;\n  first_name: string;\n  last_name: string;\n  images: any;\n}\n\nconst AlbumView : FC = () => {\n  const { album_id } = useParams();\n\n  const [album, setAlbum] = useState<Album>();\n\n  const fetchAlbum = () => {\n    axios\n      .get(`/albums?album_id=${album_id}`)\n      .then((res) => {\n        setAlbum(res.data);\n        console.log(res.data);\n      });\n  }\n\n  useEffect(() => {\n    fetchAlbum();\n  }, [])\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">{album?.album_name}</Typography>\n        <Typography variant=\"body1\">\n          By {album?.first_name} {album?.last_name}\n        </Typography>\n      </Grid>\n      {album?.images?.map((image) => (\n        <Grid item xs={12} md={6}>\n          <PhotoPreview image={image} album={album} />\n        </Grid>\n      ))}\n      <Grid item xs={12}>\n        {album?.images.length === 0 && (\n          <Typography variant=\"body1\">No images in this album</Typography>\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default AlbumView;"]},"metadata":{},"sourceType":"module"}